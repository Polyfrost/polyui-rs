/* eslint-disable */
// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.

export type Procedures = {
    queries: 
        { key: "buildInfo", input: never, result: BuildInfo } | 
        { key: "jobs.getHistory", input: LibraryArgs<null>, result: Array<JobReport> } | 
        { key: "jobs.getRunning", input: LibraryArgs<null>, result: Array<JobReport> } | 
        { key: "jobs.isRunning", input: LibraryArgs<null>, result: boolean } | 
        { key: "library.getStatistics", input: LibraryArgs<null>, result: Statistics } | 
        { key: "library.list", input: never, result: Array<LibraryConfigWrapped> } | 
        { key: "nodeState", input: never, result: NodeState },
    mutations: 
        { key: "library.create", input: string, result: LibraryConfigWrapped } | 
        { key: "library.delete", input: string, result: null } | 
        { key: "library.edit", input: EditLibraryArgs, result: null },
    subscriptions: 
        { key: "invalidateQuery", input: never, result: InvalidateOperationEvent }
};

export interface BuildInfo { version: string, commit: string }

export interface ConfigMetadata { version: string | null }

export interface EditLibraryArgs { id: string, name: string | null, description: string | null }

export interface InvalidateOperationEvent { key: string, arg: any }

export interface JobReport { id: string, name: string, data: Array<number> | null, metadata: any | null, date_created: string, date_modified: string, status: JobStatus, task_count: number, completed_task_count: number, message: string, seconds_elapsed: number }

export type JobStatus = "Queued" | "Running" | "Completed" | "Canceled" | "Failed" | "Paused"

export interface LibraryArgs<T> { library_id: string, arg: T }

export interface LibraryConfig { version: string | null, name: string, description: string }

export interface LibraryConfigWrapped { uuid: string, config: LibraryConfig }

export interface NodeConfig { version: string | null, id: string, name: string }

export interface NodeState { version: string | null, id: string, name: string, data_path: string }

export interface Statistics { id: number, date_captured: string, total_instance_count: number, library_db_size: string, total_bytes_used: string, oneconfig_stats: string }
